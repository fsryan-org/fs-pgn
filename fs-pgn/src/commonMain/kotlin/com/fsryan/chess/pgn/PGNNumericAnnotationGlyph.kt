@file:OptIn(ExperimentalJsExport::class)

package com.fsryan.chess.pgn

import kotlin.js.ExperimentalJsExport
import kotlin.js.JsExport

@JsExport
enum class PGNNumericAnnotationGlyph(val id: Int, val interpretation: String) {
    Unknown(0, "unknown"),
    GoodMove(1, "good move"),
    PoorMove(2, "poor move"),
    VeryGoodMove(3, "very good move"),
    VeryPoorMove(4, "very poor move"),
    SpeculativeMove(5, "speculative move"),
    QuestionableMove(6, "questionable move"),
    ForcedMove(7, "forced move"),
    SingularMove(8, "singular move"),
    WorstMove(9, "worst move"),
    DrawishPosition(10, "drawish position"),
    EqualChancesQuietPosition(11, "equal chances, quiet position"),
    EqualChancesActivePosition(12, "equal chances, active position"),
    UnclearPosition(13, "unclear position"),
    WhiteHasASlightAdvantage(14, "White has a slight advantage"),
    BlackHasASlightAdvantage(15, "Black has a slight advantage"),
    WhiteHasAModerateAdvantage(16, "White has a moderate advantage"),
    BlackHasAModerateAdvantage(17, "Black has a moderate advantage"),
    WhiteHasADecisiveAdvantage(18, "White has a decisive advantage"),
    BlackHasADecisiveAdvantage(19, "Black has a decisive advantage"),
    WhiteHasACrushingAdvantage(20, "White has a crushing advantage"),
    BlackHasACrushingAdvantage(21, "Black has a crushing advantage"),
    WhiteIsInZugzwang(22, "White is in zugzwang"),
    BlackIsInZugzwang(23, "Black is in zugzwang"),
    WhiteHasASlightSpaceAdvantage(24, "White has a slight space advantage"),
    BlackHasASlightSpaceAdvantage(25, "Black has a slight space advantage"),
    WhiteHasAModerateSpaceAdvantage(26, "White has a moderate space advantage"),
    BlackHasAModerateSpaceAdvantage(27, "Black has a moderate space advantage"),
    WhiteHasADecisiveSpaceAdvantage(28, "White has a decisive space advantage"),
    BlackHasADecisiveSpaceAdvantage(29, "Black has a decisive space advantage"),
    WhiteHasASlightTimeDevelopmentAdvantage(30, "White has a slight time development advantage"),
    BlackHasASlightTimeDevelopmentAdvantage(31, "Black has a slight time development advantage"),
    WhiteHasAModerateTimeDevelopmentAdvantage(32, "White has a moderate time development advantage"),
    BlackHasAModerateTimeDevelopmentAdvantage(33, "Black has a moderate time development advantage"),
    WhiteHasADecisiveTimeDevelopmentAdvantage(34, "White has a decisive time development advantage"),
    BlackHasADecisiveTimeDevelopmentAdvantage(35, "Black has a decisive time development advantage"),
    WhiteHasTheInitiative(36, "White has the initiative"),
    BlackHasTheInitiative(37, "Black has the initiative"),
    WhiteHasALastingInitiative(38, "White has a lasting initiative"),
    BlackHasALastingInitiative(39, "Black has a lasting initiative"),
    WhiteHasTheAttack(40, "White has the attack"),
    BlackHasTheAttack(41, "Black has the attack"),
    WhiteHasInsufficientCompensationForMaterialDeficit(42, "White has insufficient compensation for material deficit"),
    BlackHasInsufficientCompensationForMaterialDeficit(43, "Black has insufficient compensation for material deficit"),
    WhiteHasSufficientCompensationForMaterialDeficit(44, "White has sufficient compensation for material deficit"),
    BlackHasSufficientCompensationForMaterialDeficit(45, "Black has sufficient compensation for material deficit"),
    WhiteHasMoreThanAdequateCompensationForMaterialDeficit(46, "White has more than adequate compensation for material deficit"),
    BlackHasMoreThanAdequateCompensationForMaterialDeficit(47, "Black has more than adequate compensation for material deficit"),
    WhiteHasASlightCenterControlAdvantage(48, "White has a slight center control advantage"),
    BlackHasASlightCenterControlAdvantage(49, "Black has a slight center control advantage"),
    WhiteHasAModerateCenterControlAdvantage(50, "White has a moderate center control advantage"),
    BlackHasAModerateCenterControlAdvantage(51, "Black has a moderate center control advantage"),
    WhiteHasADecisiveCenterControlAdvantage(52, "White has a decisive center control advantage"),
    BlackHasADecisiveCenterControlAdvantage(53, "Black has a decisive center control advantage"),
    WhiteHasASlightKingsideControlAdvantage(54, "White has a slight kingside control advantage"),
    BlackHasASlightKingsideControlAdvantage(55, "Black has a slight kingside control advantage"),
    WhiteHasAModerateKingsideControlAdvantage(56, "White has a moderate kingside control advantage"),
    BlackHasAModerateKingsideControlAdvantage(57, "Black has a moderate kingside control advantage"),
    WhiteHasADecisiveKingsideControlAdvantage(58, "White has a decisive kingside control advantage"),
    BlackHasADecisiveKingsideControlAdvantage(59, "Black has a decisive kingside control advantage"),
    WhiteHasASlightQueensideControlAdvantage(60, "White has a slight queenside control advantage"),
    BlackHasASlightQueensideControlAdvantage(61, "Black has a slight queenside control advantage"),
    WhiteHasAModerateQueensideControlAdvantage(62, "White has a moderate queenside control advantage"),
    BlackHasAModerateQueensideControlAdvantage(63, "Black has a moderate queenside control advantage"),
    WhiteHasADecisiveQueensideControlAdvantage(64, "White has a decisive queenside control advantage"),
    BlackHasADecisiveQueensideControlAdvantage(65, "Black has a decisive queenside control advantage"),
    WhiteHasAVulnerableFirstRank(66, "White has a vulnerable first rank"),
    BlackHasAVulnerableFirstRank(67, "Black has a vulnerable first rank"),
    WhiteHasAWellProtectedFirstRank(68, "White has a well protected first rank"),
    BlackHasAWellProtectedFirstRank(69, "Black has a well protected first rank"),
    WhiteHasAPoorlyProtectedKing(70, "White has a poorly protected king"),
    BlackHasAPoorlyProtectedKing(71, "Black has a poorly protected king"),
    WhiteHasAWellProtectedKing(72, "White has a well protected king"),
    BlackHasAWellProtectedKing(73, "Black has a well protected king"),
    WhiteHasAPoorlyPlacedKing(74, "White has a poorly placed king"),
    BlackHasAPoorlyPlacedKing(75, "Black has a poorly placed king"),
    WhiteHasAWellPlacedKing(76, "White has a well placed king"),
    BlackHasAWellPlacedKing(77, "Black has a well placed king"),
    WhiteHasAVeryWeakPawnStructure(78, "White has a very weak pawn structure"),
    BlackHasAVeryWeakPawnStructure(79, "Black has a very weak pawn structure"),
    WhiteHasAModeratelyWeakPawnStructure(80, "White has a moderately weak pawn structure"),
    BlackHasAModeratelyWeakPawnStructure(81, "Black has a moderately weak pawn structure"),
    WhiteHasAModeratelyStrongPawnStructure(82, "White has a moderately strong pawn structure"),
    BlackHasAModeratelyStrongPawnStructure(83, "Black has a moderately strong pawn structure"),
    WhiteHasAVeryStrongPawnStructure(84, "White has a very strong pawn structure"),
    BlackHasAVeryStrongPawnStructure(85, "Black has a very strong pawn structure"),
    WhiteHasPoorKnightPlacement(86, "White has poor knight placement"),
    BlackHasPoorKnightPlacement(87, "Black has poor knight placement"),
    WhiteHasGoodKnightPlacement(88, "White has good knight placement"),
    BlackHasGoodKnightPlacement(89, "Black has good knight placement"),
    WhiteHasPoorBishopPlacement(90, "White has poor bishop placement"),
    BlackHasPoorBishopPlacement(91, "Black has poor bishop placement"),
    WhiteHasGoodBishopPlacement(92, "White has good bishop placement"),
    BlackHasGoodBishopPlacement(93, "Black has good bishop placement"),
    WhiteHasPoorRookPlacement(94, "White has poor rook placement"),
    BlackHasPoorRookPlacement(95, "Black has poor rook placement"),
    WhiteHasGoodRookPlacement(96, "White has good rook placement"),
    BlackHasGoodRookPlacement(97, "Black has good rook placement"),
    WhiteHasPoorQueenPlacement(98, "White has poor queen placement"),
    BlackHasPoorQueenPlacement(99, "Black has poor queen placement"),
    WhiteHasGoodQueenPlacement(100, "White has good queen placement"),
    BlackHasGoodQueenPlacement(101, "Black has good queen placement"),
    WhiteHasPoorPieceCoordination(102, "White has poor piece coordination"),
    BlackHasPoorPieceCoordination(103, "Black has poor piece coordination"),
    WhiteHasGoodPieceCoordination(104, "White has good piece coordination"),
    BlackHasGoodPieceCoordination(105, "Black has good piece coordination"),
    WhiteHasPlayedTheOpeningVeryPoorly(106, "White has played the opening very poorly"),
    BlackHasPlayedTheOpeningVeryPoorly(107, "Black has played the opening very poorly"),
    WhiteHasPlayedTheOpeningPoorly(108, "White has played the opening poorly"),
    BlackHasPlayedTheOpeningPoorly(109, "Black has played the opening poorly"),
    WhiteHasPlayedTheOpeningWell(110, "White has played the opening well"),
    BlackHasPlayedTheOpeningWell(111, "Black has played the opening well"),
    WhiteHasPlayedTheOpeningVeryWell(112, "White has played the opening very well"),
    BlackHasPlayedTheOpeningVeryWell(113, "Black has played the opening very well"),
    WhiteHasPlayedTheMiddlegameVeryPoorly(114, "White has played the middlegame very poorly"),
    BlackHasPlayedTheMiddlegameVeryPoorly(115, "Black has played the middlegame very poorly"),
    WhiteHasPlayedTheMiddlegamePoorly(116, "White has played the middlegame poorly"),
    BlackHasPlayedTheMiddlegamePoorly(117, "Black has played the middlegame poorly"),
    WhiteHasPlayedTheMiddlegameWell(118, "White has played the middlegame well"),
    BlackHasPlayedTheMiddlegameWell(119, "Black has played the middlegame well"),
    WhiteHasPlayedTheMiddlegameVeryWell(120, "White has played the middlegame very well"),
    BlackHasPlayedTheMiddlegameVeryWell(121, "Black has played the middlegame very well"),
    WhiteHasPlayedTheEndingVeryPoorly(122, "White has played the ending very poorly"),
    BlackHasPlayedTheEndingVeryPoorly(123, "Black has played the ending very poorly"),
    WhiteHasPlayedTheEndingPoorly(124, "White has played the ending poorly"),
    BlackHasPlayedTheEndingPoorly(125, "Black has played the ending poorly"),
    WhiteHasPlayedTheEndingWell(126, "White has played the ending well"),
    BlackHasPlayedTheEndingWell(127, "Black has played the ending well"),
    WhiteHasPlayedTheEndingVeryWell(128, "White has played the ending very well"),
    BlackHasPlayedTheEndingVeryWell(129, "Black has played the ending very well"),
    WhiteHasSlightCounterplay(130, "White has slight counterplay"),
    BlackHasSlightCounterplay(131, "Black has slight counterplay"),
    WhiteHasModerateCounterplay(132, "White has moderate counterplay"),
    BlackHasModerateCounterplay(133, "Black has moderate counterplay"),
    WhiteHasDecisiveCounterplay(134, "White has decisive counterplay"),
    BlackHasDecisiveCounterplay(135, "Black has decisive counterplay"),
    WhiteHasModerateTimeControlPressure(136, "White has moderate time control pressure"),
    BlackHasModerateTimeControlPressure(137, "Black has moderate time control pressure"),
    WhiteHasSevereTimeControlPressure(138, "White has severe time control pressure"),
    BlackHasSevereTimeControlPressure(139, "Black has severe time control pressure");

    companion object {
        fun fromId(id: Int): PGNNumericAnnotationGlyph = entries.firstOrNull { it.id == id } ?: Unknown
    }
}

val PGNNumericAnnotationGlyph.pgnString: String
    get() = if (this == PGNNumericAnnotationGlyph.Unknown) "" else "\$${id}"